AJS.test.require("jira.webresources:projectpermissions",function(){function e(e){var s=new r({id:12345});s.set("permissions",new a([{permissionKey:"random-permission-key",permissionName:"Random Permission Name"},{permissionKey:"another-permission-key",permissionName:"Another Permission Name"},{permissionKey:"BROWSE_PROJECTS",permissionName:"Browse Projects"}]));var i=new n({permissionSchemeId:s.get("id"),permissionKey:"random-permission-key"});return i.fetch(),e.requests[0].respond(200,{"Content-Type":"application/json"},JSON.stringify({primarySecurityType:[{displayName:"Project Role Permission",securityType:o.PROJECT_ROLE,values:[{displayValue:"Option A",value:"77777"},{displayValue:"Option B",value:"88888"}]},{displayName:"Application Role Permission",securityType:o.APPLICATION_ROLE,values:[{displayValue:"Option C",value:"44444"},{displayValue:"Option D",value:"55555"}]},{displayName:"Group",securityType:o.GROUP,values:[]}],secondarySecurityType:[{displayName:"Reporter",securityType:o.REPORTER,values:[]}]})),{schemeModel:s,addModel:i}}var s,i=require("jquery"),t=require("underscore"),r=require("jira/project/permissions/permissionschememodel"),n=require("jira/project/permissions/addpermissionmodel"),a=require("jira/project/permissions/permissioncollection"),o=require("jira/project/permissions/securitytypes"),l=require("jira/project/permissions/addpermissionview");module("Dialog rendering",{setup:function(){this.sandbox=sinon.sandbox.create({useFakeServer:!0}),i("#qunit-fixture").html(JIRA.Templates.AddProjectPermission.renderPopupContent());var t=e(this.sandbox.server);s=new l({el:"#grant-project-permission-popup",schemeModel:t.schemeModel,model:t.addModel}),s.open()},teardown:function(){s.close(),this.sandbox.restore()},selectPermission:function(e){var s=i("#permission-target-select");s.val(e),s.trigger("change")},selectSecurityType:function(e){s.$el.find("#"+e+"-security-type").attr("checked",!0).click()},assertSecurityWarningIsVisible:function(){ok(s.$el.find("#grant-permission-dialog-security-warning").is(":visible"),"a security warning should be visible")},assertSecurityWarningIsHidden:function(){ok(s.$el.find("#grant-permission-dialog-security-warning").is(":hidden"),"a security warning should be hidden")}}),test("Ensure elements are rendered as expected",function(){strictEqual(s.$el.find("#permission-target-select").size(),1,"element to select the permission should be present"),strictEqual(s.$el.find(".security-type-list-content > .radio").not(".secondary").size(),3,"there should be three grant types marked as primary"),strictEqual(s.$el.find(".security-type-list-content > .radio.secondary").size(),1,"there should be a single grant type marked as secondary"),strictEqual(s.$el.find("#security-type-list-more-opts-btn").is(":visible"),!0,"show more button should be visible"),strictEqual(s.$el.find("#grant-permission-dialog-grant-button[aria-disabled=true]").size(),1,"submit button should be disabled"),this.assertSecurityWarningIsHidden()}),test("Ensure only the chosen model is pre-selected when the dialog is open",function(){strictEqual(t.first(s.$el.find("#permission-target-select").val()),s.model.get("permissionKey"),"only the selected permission key should return from the grant combo")}),test("Ensure form controls are correctly enabled/disabled when submit is clicked",function(){var e=s.$el.find(".security-type-list-content > .radio:first > input");e.attr("checked",!0).click();var i=s.$el.find("#grant-permission-dialog-grant-button");strictEqual(i.attr("aria-disabled"),"false","submit button should be enabled"),strictEqual(e.attr("aria-disabled"),void 0,"radio to select permission type should not be aria-disabled"),strictEqual(e.attr("disabled"),void 0,"radio to select permission type should not be disabled"),i.click(),strictEqual(this.sandbox.server.requests.length,2,"a request for granting permission should have been fired"),strictEqual(e.attr("aria-disabled"),"true","radio to select permission type should be aria-disabled"),strictEqual(e.attr("disabled"),"disabled","radio to select permission type should be disabled")}),test("Ensure data is sent in the right format when form is submitted",function(){s.$el.find(".security-type-list-content > .radio:first > input").attr("checked",!0).click(),s.$el.find("#grant-permission-dialog-grant-button").click(),strictEqual(this.sandbox.server.requests.length,2,"a single request should have been fired");var e=JSON.parse(this.sandbox.server.requests[1].requestBody);deepEqual(e.permissionKeys,[s.model.get("permissionKey")],"permissionKeys should be an array of a single element with the chosen permission"),strictEqual(e.grants[0].securityType,o.PROJECT_ROLE,"a grant to add project role should have been submitted"),strictEqual(e.grants[0].value,"77777","first option was selected and submitted")}),test("Ensure a security warning is displayed when risky config is selected",function(){this.selectPermission(["another-permission-key","BROWSE_PROJECTS"]),this.selectSecurityType(o.PROJECT_ROLE),this.assertSecurityWarningIsHidden(),this.selectSecurityType(o.GROUP),this.assertSecurityWarningIsVisible(),this.selectSecurityType(o.APPLICATION_ROLE),this.assertSecurityWarningIsHidden(),this.selectSecurityType(o.REPORTER),this.assertSecurityWarningIsHidden(),this.selectSecurityType(o.GROUP),this.assertSecurityWarningIsVisible()}),test("Ensure a security warning gets hidden when all permissions are deselected",function(){this.selectPermission(["another-permission-key","BROWSE_PROJECTS"]),this.selectSecurityType(o.GROUP),this.assertSecurityWarningIsVisible(),this.selectPermission([]),this.assertSecurityWarningIsHidden()})});