AJS.test.require(["jira.webresources:application-role-labels"],function(){require(["underscore","jquery","jira/admin/application/group-labels-store"],function(e,s,r){function t(e,s){return{name:e,labels:s}}module("GroupLabelsStore tests",{setup:function(){this.sandbox=sinon.sandbox.create(),this.server=sinon.fakeServer.create(),this.clock=sinon.useFakeTimers()},teardown:function(){this.sandbox.restore(),this.server.restore(),this.clock.restore()}}),test("consecutive requests terminate ongoing requests",function(e){r.fetchLabels(),this.clock.tick(200),r.fetchLabels(),e.ok(this.server.requests[0].aborted,"GET aborted")}),test("it will trigger listener",function(e){var s=this.sandbox.stub(r,"fetchLabels"),n=this.sandbox.stub(),o=this.sandbox.stub(),i=r.syncLabels("group1","role1",n),a=r.syncLabels("group2","role2",o);r.triggerListener(i,[t("group1")]),r.triggerListener(a,[t("group1")]),r.triggerListener(i,[t("group2")]),sinon.assert.calledOnce(n),sinon.assert.notCalled(o),sinon.assert.calledTwice(s)}),test("callback not fired after removing handler",function(e){var s=this.sandbox.stub(r,"fetchLabels"),n=this.sandbox.stub();r.syncLabels("group1","role1",n),r.triggerListeners([t("group1")]),r.removeHandler(n),r.triggerListeners([t("group1")]),sinon.assert.calledOnce(n,"callback1 not triggered second time"),sinon.assert.calledOnce(s,"callback1 not triggered second time")})})});