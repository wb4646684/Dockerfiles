AJS.test.require("jira.webresources:browseprojects",function(){"use strict";var e=require("jira/backbone.radio-2.0"),t=void 0;module("Analytics",{setup:function(){this.sandbox=sinon.sandbox.create(),this.mockSend=this.sandbox.stub();var s=AJS.test.mockableModuleContext();s.mock("jira/analytics",{send:this.mockSend}),s.mock("jira/backbone.radio-2.0",e),t=s.require("jira/project/browse/analytics"),this.mockProject={attributes:{id:"PROJT",projectTypeKey:"Test"}}},createAnalyticsInstance:function(){this.analytics=new t,this.analyticsChannel=e.channel("browse-projects-analytics")},teardown:function(){this.analytics.destroy(),this.sandbox.restore()}}),test("project type changed to business",function(){var e=this.sandbox.spy(t.prototype,"triggerProjectTypeChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-type-change","business"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.types.business"})}),test("project type changed to software",function(){var e=this.sandbox.spy(t.prototype,"triggerProjectTypeChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-type-change","software"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.types.software"})}),test("project type changed to service desk",function(){var e=this.sandbox.spy(t.prototype,"triggerProjectTypeChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-type-change","service_desk"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.types.servicedesk"})}),test("project type changed to all",function(){var e=this.sandbox.spy(t.prototype,"triggerProjectTypeChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-type-change","all"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.types.all"})}),test("category changed to all",function(){var e=this.sandbox.spy(t.prototype,"triggerCategoryChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.category-change","all"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.categories.all"})}),test("category changed to recent",function(){var e=this.sandbox.spy(t.prototype,"triggerCategoryChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.category-change","recent"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.categories.recent"})}),test("category changed to archived",function(){var e=this.sandbox.spy(t.prototype,"triggerCategoryChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.category-change","archived"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.categories.archived"})}),test("category changed to user-defined category",function(){var e=this.sandbox.spy(t.prototype,"triggerCategoryChanged");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.category-change","test"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.categories.select"})}),test("project opened",function(){var e=this.sandbox.spy(t.prototype,"triggerProjectOpened");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-view.click-project-name",this.mockProject,1),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.openProject",data:{projectId:this.mockProject.attributes.id,projectType:this.mockProject.attributes.projectTypeKey,position:1}})}),test("user profile lead user clicked",function(){var e=this.sandbox.spy(t.prototype,"triggerProfileNameClicked");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-view.click-lead-user",this.mockProject,1),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.openProfile",data:{projectId:this.mockProject.attributes.id,projectType:this.mockProject.attributes.projectTypeKey,position:1}})}),test("project URL clicked",function(){var e=this.sandbox.spy(t.prototype,"triggerProjectURLClicked");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-view.click-url",this.mockProject,1),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.openURL",data:{projectId:this.mockProject.attributes.id,projectType:this.mockProject.attributes.projectTypeKey,position:1}})}),test("project category clicked",function(){var e=this.sandbox.spy(t.prototype,"triggerProjectCategoryClicked");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.project-view.click-category",this.mockProject,1),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.openCategory",data:{projectId:this.mockProject.attributes.id,projectType:this.mockProject.attributes.projectTypeKey,position:1}})}),test("navigate to page",function(){var e=this.sandbox.spy(t.prototype,"triggerNavigateToPage");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.navigate-to-page",1),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.pagination.goto",data:{pageNumber:1}})}),test("navigate to previous page",function(){var e=this.sandbox.spy(t.prototype,"triggerNavigateToPrevious");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.navigate-to-previous"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.pagination.previous"})}),test("navigate to next page",function(){var e=this.sandbox.spy(t.prototype,"triggerNavigateToNext");this.createAnalyticsInstance(),this.analyticsChannel.trigger("browse-projects.navigate-to-next"),sinon.assert.called(e),sinon.assert.calledWith(this.mockSend,{name:"projects.browse.pagination.next"})})});