AJS.test.require(["jira.webresources:share-types","jira/share/entities/display"],function(){"use strict";var s=require("jira/share/entities/display"),a=require("jquery");module("Display",{setup:function(){this.key="userKey";this.sandbox=sinon.sandbox.create(),this.display=new s(this.key,"","","",this.key),this.dataSpan=document.createElement("span"),a("body").append(this.dataSpan),this.dataSpan.id="span_id",this.dataSpan.innerHTML=this.key,this.display.dataSpanId="span_id"},teardown:function(){this.sandbox.restore(),this.dataSpan.remove()}}),test("Leaves the userKey in place if fails to fetch the displayName",function(){expect(2);var s=this,e=this.sandbox.stub(a,"ajax");this.display.updateDisplayName(),window.setTimeout(function(){sinon.assert.calledOnce(e),sinon.assert.match(s.dataSpan.innerHTML,s.key),QUnit.start()},0),QUnit.stop()}),test("Swaps userKey for displayName if possible",function(){expect(4);var s=this,e={displayName:"Display Name"},t=this.sandbox.stub(a,"ajax").yieldsTo("success",e),i=this.sandbox.spy(this.display,"swapNames"),n=this.sandbox.stub(this.display,"getMessage",function(){return"Display Name"});this.display.updateDisplayName(),window.setTimeout(function(){sinon.assert.calledOnce(t),sinon.assert.calledOnce(i),sinon.assert.calledOnce(n),sinon.assert.match(s.dataSpan.innerHTML,"Display Name"),QUnit.start()},0),QUnit.stop()})});