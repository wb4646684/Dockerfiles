AJS.test.require("jira.webresources:jira-setup",function(){var e=require("jquery"),t=require("underscore"),i=function(e,t){return{selected:!!t,text:e,value:e}},n={errors:{},databaseOptions:{},externalDatabases:[i("mssql",!0),i("mysql"),i("oracle10g"),i("postgres72")],helpPaths:{migration:"migtation.url",external:"external.url"},fieldValues:{}};module("JIRA Db Select page tests",{setup:function(){this.orgFormat=AJS.format,AJS.format=function(){return arguments[1]+arguments[0]+arguments[2]};var i=JIRA.Templates.Setup.layoutContent({content:JIRA.Templates.Setup.Database.pageContents(t.extend({globalErrors:[]},n))});this.sandbox=sinon.sandbox.create({useFakeServer:!0}),e("#qunit-fixture").append(e("<div></div>").addClass("jira-setup-database-page").html(i)),this.setupTrackerMock={insert:sinon.spy(),sendUserClickedOnMigrationsLink:sinon.spy(),sendUserClickedOnConnectingJiraToDatabaseLink:sinon.spy(),sendUserPickedDatabase:sinon.spy()},this.mockedContext=AJS.test.mockableModuleContext(),this.mockedContext.mock("jira/ajs/contentretriever/dom-content-retriever",require("jira/ajs/contentretriever/dom-content-retriever")),this.mockedContext.mock("jira/ajs/contentretriever/content-retriever",require("jira/ajs/contentretriever/content-retriever")),this.mockedContext.mock("jira/setup/setup-tracker",this.setupTrackerMock);var s=this.mockedContext.require("jira/setup/setup-database-view");this.initializeView=function(){this.view=new s({el:".jira-setup-database-page"})}},teardown:function(){this.sandbox.restore(),this.view.remove(),AJS.format=this.orgFormat}}),test("Error messages are displayed in the notifications area",function(){this.initializeView(),this.view.testConnection(),this.sandbox.server.requests[0].respond(200,{"Content-Type":"application/json"},JSON.stringify({data:t.extend({dbTestSuccessful:!1,databaseMessagesContent:[],globalErrors:["errorFoo","errorBar"]},n)})),deepEqual(t.map(this.view.ui.errorMessages.children(),function(t){return e(t).html()}),["errorFoo","errorBar"],"Errors are displayed on the page"),equal(0,this.view.ui.successMessages.length,"Success message is not displayed.")}),test("DB fields are hidden and shown on changing db type.",function(){this.initializeView();var i=this.view.ui.dbType,n=function(t){i.val(t),i.children().removeAttr("selected").filter(function(i,n){return e(n).html()==t}).attr("selected",""),i.trigger("change")},s=function(t,i){equal(AJS.$(".db-type-"+t).filter(function(t,n){return!e(n).hasClass("db-type-"+i)}).filter(function(t,i){return!e(i).hasClass("hidden")}).length,0,"Should hide all "+t+" specific fields."),equal(AJS.$(".db-type-"+i).filter(function(t,i){return e(i).hasClass("hidden")}).length,0,"None of the "+i+" should be hidden.")};t.each(function(e,i){var n=e;return t.map(i,function(e){var t={oldDb:n,newDb:e};return n=e,t})}("mssql",["mysql","oracle10g","postgres72"]),function(e){n(e.newDb),s(e.oldDb,e.newDb)})}),test("Analytics event is sent after clicking in migrations link",function(){this.initializeView(),this.view.ui.migrations.click(),ok(this.setupTrackerMock.sendUserClickedOnMigrationsLink.calledOnce)}),test("Analytics event is sent after clicking in connecting Jira to DB link",function(){this.initializeView(),this.view.ui.connectingJiraToDB.click(),ok(this.setupTrackerMock.sendUserClickedOnConnectingJiraToDatabaseLink.calledOnce)}),test("Analytics event is sent after user submited form",function(){this.initializeView(),this.sandbox.stub(this.view.ui.form,"submit"),this.view.onSubmit({preventDefault:function(){}}),ok(this.setupTrackerMock.sendUserPickedDatabase.calledOnce)})});